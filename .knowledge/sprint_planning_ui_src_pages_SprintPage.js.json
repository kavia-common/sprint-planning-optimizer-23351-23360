{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This file defines a React component 'SprintPage' that presents a task management dashboard for sprint planning, including draggable tickets, capacity summary, and Jira integration.", "external_files": ["../data/mockData", "../utils/toast", "../services/jiraService"], "external_methods": ["columns", "getInitialBoard", "useToast", "updateIssue"], "published": ["default"], "classes": [], "methods": [{"name": "SprintPage()", "description": "Main React component managing sprint board UI, drag-and-drop ticket operations, capacity calculation, and Jira sync.", "scope": "", "scopeKind": ""}, {"name": "onDragStart", "description": "Handles the start of dragging a ticket, setting transfer data and style."}, {"name": "onDragEnd", "description": "Removes dragging style after drag completes."}, {"name": "onDrop", "description": "Handles dropping a ticket into a column, updating the board state accordingly."}, {"name": "syncWithJira", "description": "Asynchronously syncs ticket status updates to Jira via updateIssue service, with error handling and notifications."}], "calls": ["useState", "useMemo", "updateIssue", "notify"], "search-terms": ["SprintPage", "drag and drop", "Jira sync", "capacity calculation", "mockData", "draggable tickets", "React component"], "state": 2, "file_id": 20, "knowledge_revision": 58, "git_revision": "d3e9795717810f5fc121d72a9f21ec90c5c47b70", "revision_history": [{"40": ""}, {"58": "d3e9795717810f5fc121d72a9f21ec90c5c47b70"}], "ctags": [{"_type": "tag", "name": "SprintPage", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^export default function SprintPage() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "Ticket", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^const Ticket = ({ item, onDragStart }) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fields", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^          const payload = { fields: { status: { name: t.status } } };$/", "language": "JavaScript", "kind": "class", "scope": "SprintPage.payload", "scopeKind": "class"}, {"_type": "tag", "name": "item", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^const Ticket = ({ item, onDragStart }) => {$/", "language": "JavaScript", "kind": "field", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^          const payload = { fields: { status: { name: t.status } } };$/", "language": "JavaScript", "kind": "property", "scope": "SprintPage.payload.fields.status", "scopeKind": "class"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^          const payload = { fields: { status: { name: t.status } } };$/", "language": "JavaScript", "kind": "class", "scope": "SprintPage", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/sprint-planning-optimizer-23351-23360/sprint_planning_ui/src/pages/SprintPage.js", "pattern": "/^          const payload = { fields: { status: { name: t.status } } };$/", "language": "JavaScript", "kind": "class", "scope": "SprintPage.payload.fields", "scopeKind": "class"}], "hash": "d61c97d34f9a0d30ee719f50e19d433e", "format-version": 4, "code-base-name": "sprint_planning_ui", "filename": "sprint_planning_ui/src/pages/SprintPage.js", "fields": [{"name": "const Ticket = ({ item, onDragStart }) => {", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "const payload = { fields: { status: { name: t.status } } };", "scope": "SprintPage.payload.fields.status", "scopeKind": "class", "description": "unavailable"}]}